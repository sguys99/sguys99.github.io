<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://sguys99.github.io//author/km.yu99/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://sguys99.github.io//" rel="alternate" type="text/html" />
  <updated>2022-07-03T09:37:55+00:00</updated>
  <id>https://sguys99.github.io//author/km.yu99/feed.xml</id>

  
  
  

  
    <title type="html">Happy Plant | </title>
  

  
    <subtitle>Data science, Machine learning, and Automatic control</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">docker로 gpu기반 딥러닝 개발환경 구축하기</title>
      <link href="https://sguys99.github.io//it08" rel="alternate" type="text/html" title="docker로 gpu기반 딥러닝 개발환경 구축하기" />
      <published>2022-07-01T15:00:00+00:00</published>
      <updated>2022-07-01T15:00:00+00:00</updated>
      <id>https://sguys99.github.io//it08</id>
      <content type="html" xml:base="https://sguys99.github.io//it08">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;이 포스트는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./it06&quot;&gt;(1)WSL2 설치하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./it07&quot;&gt;(2)ubuntu 환경에서 docker 설치하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./it08&quot;&gt;(3)docker로 gpu기반 딥러닝 개발환경 구축하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;딥러닝 개발 환경을 구축하는 작업은 번거롭다. 프로젝트 별로 모델 개발 또는 구동 환경이 다를 수 있는데, 이 때마다 설정을 반복해야 한다. 물론 가상 환경을 사용하면 단일 서버에 여러 개의 개발 환경을 관리할 수 있다. 그러나 매번 환경 설정을 해야하는 불편함은 그대로다. 누군가 잘 만들어둔 환경 세팅을 가져와서 쓸 수 있다면, 시간을 단축 시킬 수 있을 것이다. 그리고 또 한가지. 여러 사람이 협업을 하는 프로젝트의 경우, 각자 개발 환경 통일이 되지 않는 다면 시행착오를 겪을 것이다. 구성원 간 개발 환경을 통일하는 작업 또한 골칫거리다. 한가지 더 예를 들어보자. 하나의 GPU 서버 자원을 여러 사람이 함께 사용해야하는 상황을 생각해보자. 누군가는 텐서플로를 사용하고, 다른 사람은 파이토치를 사용할 수도 있다. 사용하는 프레임워크의 버전, 라이브러리의 종류도 제각각이다. 각자 자신의 입맛에 맞는 가상환경을 설정하다보면 서버 시스템 환경이 지저분해질 수 있다.&lt;/p&gt;

&lt;p&gt;도커를 사용하면 딥러닝 모델 개발 환경을 구축하는 것부터, 협업 환경을 통일하는 일까지 간편하게 마무리할 수 있다. 그리고 라이브러리들이 컨테이터 안에서 동작하기 때문에 서버 설정을 최소화 할 수 있다. 따라서 서버 자원에 손대는 작업을 최소화 할 수 있다. 마지막으로 한가지 변수만 남았다. 도커 컨테이터 안에서 gpu 자원에 접근 가능할까.&lt;/p&gt;

&lt;p&gt;본 포스트에서는 도커를 사용해서 gpu 기반 딥러닝 프레임워크 개발환경을 구축하는 방법에 대해서 설명한다. Ubuntu 20.04, 엔비티어 RTX 3080 gpu 환경을 기준으로 설명한다. 하지만 WSL2 환경에서도 동일한 방법으로 환경구축이 가능하다. 도커는 이미 설치되어 있다고 가정하고 설명을 진행한다. 도커 및 WSL2 설정에 대한 설명은 다음 포스트를 참고하기 바란다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sguys99.github.io/it06&quot;&gt;WSL2 와 docker for windows 설치&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sguys99.github.io/it07&quot;&gt;ubuntu 환경에서 docker 설치&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1-nvidia-드라이버-설치&quot;&gt;1. nvidia 드라이버 설치&lt;/h3&gt;
&lt;p&gt;그래픽카드 드라이버 설치가 되어있지 않다면 설치를 진행한다. 서버에 장착된 그래픽카드에 설치가능한 드라이버 버전을 확인한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo ubuntu-drivers devices
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.01.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 화면 상에서 권장하는 드라이버는 nvidia-driver-470이다.&lt;/p&gt;

&lt;p&gt;드라이버를 설치하는 방법은 두가지다. (자동/ 수동)&lt;/p&gt;

&lt;p&gt;방법1) 권장 드라이버를 자동설치 하려면 다음과 같이 입력한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo ubuntu-drivers autoinstall
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;방법2) 원하는 버전을 수동으로 설치하려면 직접 드라이버 버전을 명시하면 된다.&lt;br /&gt;
예를 들어 nvidia-driver-470을 설치하고 싶다면 다음과 같이 입력한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt install nvidia-driver-470
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여기서는 자동 설치로 진행했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.02.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설치 완료 후 시스템을 재부팅 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 제대로 되었는지 확인한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ apt --installed list | grep nvidia-driver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.03.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;nvidia-driver-470이 설치되었다.&lt;/p&gt;

&lt;p&gt;마지막으로 nvidia-smi 명령으로 gpu의 상태도 확인해본다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nvidia-smi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.04.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-도커-설치생략&quot;&gt;2. 도커 설치(생략)&lt;/h3&gt;

&lt;p&gt;만약 도커가 설치되어 있지 않다면, 이전 포스트를 참고하여 설치를 완료한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sguys99.github.io/it07&quot;&gt;ubuntu 환경에서 docker 설치&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-엔비디아-도커2-설치&quot;&gt;3. 엔비디아 도커2 설치&lt;/h3&gt;

&lt;p&gt;엔비디아 도커(nvidia docker)의 정식 명칭은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NVIDIA Container Toolkit&lt;/code&gt;으로, 컨테이너 환경에서 gpu 자원을 가동할 수 있도록 돕는 툴킷이다. 이 툴킷을 사용하면 도커 컨테이너 환경에서 nvidia CUDA runtime을 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.05.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그런데 도커 최신 버전(Docker-ce 19.03 이후 버전)에서는 nvidia CUDA runtime을 사용할 수 있도록 공식적으로 지원하고 있다. 다시 말해 엔비디아 도커 설치 필요 없이 컨테이너 내부에서 gpu를 구동할 수 있다. 하지만 docker에서 gpu를 사용하기 위한 명령어와 nvidia docker를 통해 gpu를 사용하기 위한 명령어는 약간의 차이가 있다. 엔비디아 도커를 추가로 설치한다고 문제가 되지는 않는다. 여기서는 엔비디아 도커2 버전을 설치해보도록 한다.&lt;/p&gt;

&lt;p&gt;설치 전에 GPG 키를 추가하고 엔비디아 도커 원격저장소를 바라보도록 설정한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
$ distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
$ curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.06.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설치된 패키지 리스트를 업데이트 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;엔비디아 도커를 설치한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get install -y nvidia-docker2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.07.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;도커를 재시작한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정상적으로 설지되었는지 확인하기 위해 컨테이너 안에서 nvidia-smi 명령을 실행해본다. 앞에서도 언급한 바와 같이 네이티브 도커(Docker-ce 19.03 이후 버전) 명령으로 실행하는 방법과 엔비디아 도커를 사용하는 명령에 차이가 있다. 예를 들어 CUDA10.1 버전을 사용한 컨테이너를 생성하고 nvidia-smi 명령을 실행하기 위한 방법들은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;방법1 : 네이티브 도커 사용
    &lt;ul&gt;
      &lt;li&gt;docker run -it –gpus –rm nvidia/cuda:10.1-base nvidia-smi&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;방법2 : 엔비디아 도커 사용
    &lt;ul&gt;
      &lt;li&gt;docker run –runtime=nvidia -it –rm nvidia/cuda:10.1-base nvidia-smi&lt;/li&gt;
      &lt;li&gt;nvidia-docker run -it –rm nvidia/cuda:10.1-base nvidia-smi&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;네이티브 도커를 사용할 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--gpus&lt;/code&gt; 옵션을 사용하면 되고, 엔비디아 도커를 사용할 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--runtime=nvidia&lt;/code&gt; 옵션으로 지정하거나, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvidia-docker&lt;/code&gt; 명령으로 gpu 사용을 명시하면 된다.&lt;/p&gt;

&lt;p&gt;위 세가지 중 한 가지를 입력해보자. 로컬 서버에 &lt;strong&gt;nvidia/cuda:10.1-base&lt;/strong&gt; 도커 이미지가 없다면 원격으로 이미지를 가져온 후, 컨테이너를 생성하고 nvidia-smi 명령을 실행한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.08.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-컨테이너에서-딥러닝-프레임워크pytorch-구동하기&quot;&gt;4. 컨테이너에서 딥러닝 프레임워크(pytorch) 구동하기&lt;/h3&gt;

&lt;p&gt;마지막으로 CUDA runtime이 탑재된 컨테이너에서 파이토치(pytorch)를 구동해보자.&lt;/p&gt;

&lt;p&gt;미리 만들어진 이미지를 다운 받기 위해 웹브라우저로 &lt;a href=&quot;https://hub.docker.com/&quot;&gt;도커 허브(Docker Hub)&lt;/a&gt;에 접속한다. 도커 허브는 도커 이미지를 저장하고 공유할 수 있도록 돕는 서비스이다. 만약 계정이 없다면 가입하고 로그인한다.&lt;/p&gt;

&lt;p&gt;검색창에 pytorch/pytorch를 입력해서 파이토치 공식 저장소에 접근한다. 그리고 Tags를 클릭하면 다양한 버전, 다양한 CUDA runtime을 탑재한 이미지들을 확인할 수 있다. 여기서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1.7.1-cuda11.0-cudnn8-runtime&lt;/code&gt;이미지를 가져오도록 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.09.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;터미널에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker pull&lt;/code&gt; 명령으로 이미지를 로컬 서버로 가져온다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker pull pytorch/pytorch:1.7.1-cuda11.0-cudnn8-runtime
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker images&lt;/code&gt; 명령으로 저장된 이미지 리스트를 확인해본다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker images
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.10.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CUDA runtime을 사용한 도커 컨테이너를 구동한다. 그리고 python을 실행하고, 파이토치를 import하여 gpu 사용이 가능한지 확인해본다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;방법1 : 네이티브 도커 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker run -it --gpus all pytorch/pytorch:1.7.1-cuda11.0-cudnn8-runtime
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.11.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;방법 2-1 : 엔비디아 도커 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker run --runtime=nvidia -it all pytorch/pytorch:1.7.1-cuda11.0-cudnn8-runtime
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.12.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;방법 2-2 : 엔비디아 도커 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nvidia-docker run -it all pytorch/pytorch:1.7.1-cuda11.0-cudnn8-runtime
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-07-01-it08/it08.13.jpg&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="it-tips" />
      

      
        <summary type="html">이 포스트는 여러 절로 구성되어 있습니다. (1)WSL2 설치하기 (2)ubuntu 환경에서 docker 설치하기 (3)docker로 gpu기반 딥러닝 개발환경 구축하기</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">ubuntu 환경에서 docker 설치하기</title>
      <link href="https://sguys99.github.io//it07" rel="alternate" type="text/html" title="ubuntu 환경에서 docker 설치하기" />
      <published>2022-06-25T15:00:00+00:00</published>
      <updated>2022-06-25T15:00:00+00:00</updated>
      <id>https://sguys99.github.io//it07</id>
      <content type="html" xml:base="https://sguys99.github.io//it07">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;이 포스트는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./it06&quot;&gt;(1)WSL2 설치하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./it07&quot;&gt;(2)ubuntu 환경에서 docker 설치하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./it08&quot;&gt;(3)docker로 gpu기반 딥러닝 개발환경 구축하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;도커(docker)는 리눅스 환경에서 동작하는 응용 프로그램들을 컨테이너(container)라고 하는 독립적인 실행환경에서 운영하도록 돕는 오픈소스 프로젝트이다. 과거에 VMware나 VirtualBox와 같이 호스트 OS위에 가상화 소프트웨어를 설치하여 OS를 구동하는 방식이 존재했다. 이에 비해 도커는 호스트 OS 위에 추가적으로 OS를 설치하지 않기 때문에 설치 용량이 적고 실행속도도 빠르다.&lt;/p&gt;

&lt;p&gt;도커는 일반적으로 서버환경 구축, 운영을 위해 널리 사용된다. 이외에 다수의 딥러닝 엔지니어들이 GPU 자원을 함께 사용해야 하는 환경에서 도커 이미지로 개별 개발 환경을 구축하는데 사용할 수 있다. 이렇게 하면 GPU OS의 기본 설정 변경을 최소화 하면서, 각자가 선호하는 모델 개발 환경을 만들어서 작업을 진행할 수 있다.  본 포스트는 도커를 사용한 딥러닝 개발환경 구축을 염두해두고, 도커를 설치하는 방법에 대해서 설명한다.&lt;/p&gt;

&lt;p&gt;Ubuntu 20.04를 기준으로 설치 방법을 설명한다. WSL2나 windos OS 상에서 도커를 설치하는 방법에 대해서는 &lt;a href=&quot;https://sguys99.github.io/it06&quot;&gt;&lt;strong&gt;WSL2 설치하기&lt;/strong&gt;&lt;/a&gt; 포스트를 참고한다.&lt;/p&gt;

&lt;h3 id=&quot;1-구버전-삭제-및-사전-설정&quot;&gt;1. 구버전 삭제 및 사전 설정&lt;/h3&gt;
&lt;p&gt;이미 구버전이 설치되어 있다면, 삭제한다. 그리고 패키지를 업데이트 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ apt-get remove docker docker-engine docker.io containerd runc
$ sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;도커를 설치하는데 필요한 &lt;strong&gt;필수 패키지&lt;/strong&gt;를 설치한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-06-25-it07/it07.01.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;도커의 GPG 키를 추가한다. 리눅스의 패키지 관리 툴이 도커 엔진 설치 전에 패키지가 유효한지 확인하기 위해 검증을 하는데 이때 GPG키가 필요하다. 따라서 curl로 GPG 키를 다운 받아 apt 키 리스트에 추가해야 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-06-25-it07/it07.02.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;패키지 관리 시스템이 안정된 버전의 도커 설치 파일이 있는 저장소를 바라보도록 설정한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-06-25-it07/it07.03.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-도커엔진-설치&quot;&gt;2. 도커엔진 설치&lt;/h3&gt;

&lt;p&gt;패키지 업데이트 후, 도커 엔진 최신 버전을 설치한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-06-25-it07/it07.04.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이로써 기본적인 도커 설치가 완료되었다.&lt;/p&gt;

&lt;h3 id=&quot;3-기본-사용자-권한-설정&quot;&gt;3. 기본 사용자 권한 설정&lt;/h3&gt;

&lt;p&gt;정상적으로 설치되었는지 확인하기 위해, 간단한 도커 명령어를 입력해보자. 가동 중인 컨테이너 리스트를 출력해주는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker ps&lt;/code&gt; 명령을 입력해본다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker ps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-06-25-it07/it07.05.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;컨테이너 리스트가 출력되지 않고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;permission denied&lt;/code&gt; 메시지가 출력된다. 도커는 기본적으로 root 권한으로만 명령어 사용이 가능하다.&lt;/p&gt;

&lt;p&gt;매번 도커 명령 앞에 sudo를 입력하면 번거롭다. root 권한이 아닌 호스트의 기본 유저에게도 사용 권한을 주도록 설정한다. 그리고 도커를 재시작(restart) 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo usermod -a -G docker $USER
$ sudo service docker restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-06-25-it07/it07.06.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 OS를 재시작한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;재부팅을 한 후, 터미널을 실행해서 동작중인 컨테이너 리스트를 출력해본다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker ps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-06-25-it07/it07.07.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;컨테이너 생성을 하지 않았기 때문에 어떤 컨테이너도 표시되지 않는다. 하지만 앞에서와는 달리 빈 리스트 정보가 표시된다. 도커가 정상적으로 설치된 것이다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="it-tips" />
      

      
        <summary type="html">이 포스트는 여러 절로 구성되어 있습니다. (1)WSL2 설치하기 (2)ubuntu 환경에서 docker 설치하기 (3)docker로 gpu기반 딥러닝 개발환경 구축하기</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WSL2 설치하기</title>
      <link href="https://sguys99.github.io//it06" rel="alternate" type="text/html" title="WSL2 설치하기" />
      <published>2022-05-28T15:00:00+00:00</published>
      <updated>2022-05-28T15:00:00+00:00</updated>
      <id>https://sguys99.github.io//it06</id>
      <content type="html" xml:base="https://sguys99.github.io//it06">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;이 포스트는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./it06&quot;&gt;(1)WSL2 설치하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./it07&quot;&gt;(2)ubuntu 환경에서 docker 설치하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./it08&quot;&gt;(3)docker로 gpu기반 딥러닝 개발환경 구축하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows Subsystem for Linux(WSL)는 Windows 환경에서 가상머신이나 듀얼부팅 설정 없이 Linux를 사용할 수 있도록 돕는 소프트웨어이다. 여기서는 WSL2 기반 환경에서, Ubuntu 22.04를 설치/사용하는 방법에 대해서 설명한다.&lt;/p&gt;

&lt;h3 id=&quot;1-windows-버전-확인&quot;&gt;1. Windows 버전 확인&lt;/h3&gt;
&lt;p&gt;WSL2는 Windows 10 빌드 19041 이상, 또는 Windows 11 이상에서 동작한다. 만약 Windows 10을 사용하고 있다면 작업 표시줄 검색창에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PC 정보&lt;/code&gt;를 입력해서 사용하는 OS 빌드 정보를 확인해본다. 버전이 낮다면 OS 업데이트를 진행한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.01.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-windows-terminal-설치-선택사항&quot;&gt;2. Windows Terminal 설치 (선택사항)&lt;/h3&gt;

&lt;p&gt;WSL2 설치는 터미널을 통해 진행한다. 기본으로 설치되어 있는 PowerShell도 사용할 수 있지만, 사용에 장점이 많은 Windows Terminal 설치를 추천한다. Windows Terminal은 작업 표시줄 검색으로 Microsoft Store에 접속하여 Windows Terminal을 검색하여 다운, 설치할 수 있다. 또는 다음 &lt;a href=&quot;https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701?hl=ko-KR&amp;amp;gl=KR&quot;&gt;[링크]&lt;/a&gt;에 접속하여 다운받는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.02.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설치가 완료된 후, 다시 작업 표시줄 검색에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;터미널&lt;/code&gt;을 입력하면 Windows Terminal 프로그램을 실행할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.03.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-wsl2-셋업하기&quot;&gt;3. WSL2 셋업하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;먼저 Windows Terminal을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 실행한다. 그리고 WSL2를 셋업하기 위해 다음 두 명령어를 차례대로 입력한다. WSL과 가상환경 옵션을 활성화 해주는 명령이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
&amp;gt; dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.04.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;활성화가 끝나면 &lt;strong&gt;Windows를 재시작&lt;/strong&gt; 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linux커널 업데이트 패키지를 다운, 설치한다. &lt;a href=&quot;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi&quot;&gt;여기&lt;/a&gt;에 접속하여 x64용 msi 파일을 다운로드한다. 다운받은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wsl_update_x64.msi&lt;/code&gt;파일을 실행하여 설치를 진행한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.05.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;WSL이 정상적으로 설정되었는지 확인한다. Windows Terminal에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wsl&lt;/code&gt;을 입력했을 때 다음과 같은 메시지가 실행되면 제대로 설정된 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.06.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;계속해서 WSL2를 기본버전으로 설정해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; wsl --set-default-version 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.07.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-linux-배포-버전-설치&quot;&gt;4. Linux 배포 버전 설치&lt;/h3&gt;

&lt;p&gt;이제 WSL2에서 구동되는 Linux 배포 버전을 설치한다. 여기서는 Ubuntu 22.04를 기준으로 설명한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Microsoft Store에서 Ubuntu 22.04를 검색해서 다운로드 버튼을 클릭한다. 다운이 완료되면 열기를 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.08.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;언어나 사용자/ 패스워드 설정을 진행한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.09.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows Terminal을 실행하면 Ubuntu 22.04 터미널 항목이 추가되었다. 선택하면 우분투 터미널을 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.10.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;참-고--wsl2-ubuntu-환경에서-docker-사용하기&quot;&gt;참 고 : WSL2 Ubuntu 환경에서 Docker 사용하기&lt;/h3&gt;

&lt;p&gt;WSL2하의 Ubuntu에서 Docker를 사용하기 위해서는 Windows용 Docker를 설치해야 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker 공식 사이트의 &lt;a href=&quot;https://docs.docker.com/desktop/windows/install/&quot;&gt;Windows 버전 설치 페이지&lt;/a&gt;로 이동한다. 그리고 &lt;strong&gt;Docker Desktop for Windows&lt;/strong&gt; 버튼을 클릭해서 설치파일을 다운 받는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.11.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;다운 받은 설치 파일을 실행해서 설치를 진행한다.  Use WSL2… 항목이 체크된 것을 확인한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.12.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설치가 완료되면 Windows를 재시작한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows Terminal에서 Ubuntu를 실행한다. 터미널에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker ps&lt;/code&gt;를 입력해서 결과가 다음과 같으면 정상적으로 설치된 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-05-28-it06/it06.13.jpg&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="it-tips" />
      

      
        <summary type="html">이 포스트는 여러 절로 구성되어 있습니다. (1)WSL2 설치하기 (2)ubuntu 환경에서 docker 설치하기 (3)docker로 gpu기반 딥러닝 개발환경 구축하기</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(서울 송파 맛집) 셰프의 부엌</title>
      <link href="https://sguys99.github.io//foody7" rel="alternate" type="text/html" title="(서울 송파 맛집) 셰프의 부엌" />
      <published>2022-01-20T17:00:00+00:00</published>
      <updated>2022-01-20T17:00:00+00:00</updated>
      <id>https://sguys99.github.io//foody7</id>
      <content type="html" xml:base="https://sguys99.github.io//foody7">&lt;p&gt;송파구 방이시장 인근 파스타 맛집 &lt;strong&gt;셰프의 부엌&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;주 소 :&lt;/strong&gt;  &lt;a href=&quot;https://map.naver.com/v5/entry/place/36957176?c=14150311.4159513,4510583.1128872,15,0,0,0,dh&quot;&gt;서울 송파구 가락로 259&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;영업시간 :&lt;/strong&gt; 17:00 ~ 00:00 (매월 2, 4주차 일요일 휴무)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;전화번호 :&lt;/strong&gt; 010-4762-3037&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;대표메뉴 :&lt;/strong&gt; &lt;strong&gt;알리오올리오&lt;/strong&gt;(14,000원), 날치알크림파스타(18,000원), 카수엘라감바스(20,000원)&lt;/li&gt;
&lt;/ul&gt;

&lt;p align=&quot;left&quot;&gt;
&lt;iframe src=&quot;https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d12659.462539218783!2d127.1185693!3d37.5110871!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0xa2bc958a78761f43!2z7IWw7ZSE7J2YIOu2gOyXjA!5e0!3m2!1sko!2skr!4v1642849631917!5m2!1sko!2skr&quot; width=&quot;400&quot; height=&quot;300&quot; style=&quot;border:0;&quot; allowfullscreen=&quot;&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;신혼시절 집근처에 자주가던 식당이 있었다. 파스타도 팔고 가볍게 맥주나 와인 한잔하며 요기를 하던 곳. 출출할 때 아내와 처제를 불러내서 제법 근사한 안주에 폼내며 한잔하고 들어 갔던 곳. 그런데 언젠가 가게가 있던 건물은 전체가 재개발이 들어가고 그 식당도 사라졌다. 자연스럽게 내 기억속에서 멀어져갔다.&lt;/p&gt;

&lt;p&gt;얼마 전 퇴근길에 우연히 다른 골목에서 같은 상호의 가게를 발견했다. 외관과 인테리어는 많이 다르지만 다행히 같은 주인이 운영하는 가게였다. 당시 기억엔 갈때마다 손님이 우리 밖에 없었는데 큰길가로 옮긴 덕인지 매일 손님은 만석이다. 음식의 질과 서비스를 생각하면 당연하겠지만… 오늘은 나의 추억이 깃든 이 장소에 대해 포스팅해보려고 한다.&lt;/p&gt;

&lt;p&gt;가게 내부는 4인 테이블 5개 정도로 크지 않다. 주말에 손님이 붐빌 것 같아 미리 예약을 하고 방문했다. 역시 모든 테이블이 예약 표시되어 있다. 이전의 가게는 스페인 느낌이 물씬 풍기는 엔틱풍의 인테리어가 인상적이었다. 새로 옮긴 가게는 더 모던해진 느낌이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.01.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이곳의 식사도 훌륭하지만 한잔 하면서 즐기는 안주도 일품이다. 이날은 일정이 있어 식사만 하기로 하고 안주는 다음을 기약하기로 한다. 서빙되는 음식들의 퀄리티를 생각하면 가격도 나쁘지 않은 편이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.02.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;과거에 비해 정갈하고 깔끔해진 테이블 세팅. 뭐든 좋다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.03.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;음식을 기다리며 창밖을 내다본다. 간만에 즐기는 여유. 자주 걷던 동네 인근인데도, 지나가는 차와 사람들을 관찰하는 재미가 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.04.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;에피타이저로 치즈와 크래커가 나왔다. 짭조름하면서 달달한 치즈가 담백한 크래커와 절묘하게 어우러진다. 음식을 기다리기 힘들게 더 안달나게 한다고나 할까.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.05.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;알리오올리오 파스타가 먼저 나왔다. 이 곳에 오면 항상 주문하는, 강력 추천하는 메뉴다. 1,4000원이라는 가격도 마음에 든다. 보는 재미도 맛보는 재미도 있는 메뉴.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.06.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;올리브오일의 고소함과 고추의 칼칼함이 더해져서 개성이 강한 맛을 낸다. 이 곳에서만 경험 할 수 있는 맛이다. 알리오 올리오가 자칫 심심해 질수도 있는데 튀김가루와 약간의 베이컨, 야채 등이 더해져서 씹는 재미도 있다. 여전히 실망시키지 않는 맛이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.07.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이어 등장한 크림 리조또. 어디를 가든 기본 이상을 하는 메뉴. 취향에 따라 알리오 올리오가 맵다고 느낄 수도 있는데, 함께 시키면 궁합이 맞을 것 같다. 가격도 1,5000원으로 요즘 물가에 비해 저렴한 편이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.08.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;세명이서 왔을 때, 세개를 시키자니 양이 부담스럽고, 두개를 주문하자니 양이 적을 것 같다면, 제주 돈까스 샐러드를 주문해보자. 두툼한 돈까스와 싱싱한 샐러드 그리고 소스가 어우러진 건강한 맛이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.09.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;주말 저녁, 소중한 친구, 가족들이 삼삼오오 모여 멋들어진 음식과 함께 소중한 시간을 나눈다. 5년 만에 재방문한 추억의 장소. 그 누군가에게도 이 가게가 기억에 남는 공간이 되길 바라며 계속 이 맛을 이어가 주길 바란다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-20-foody7/diary07.10.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;총-평&quot;&gt;총 평&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;음식맛 : &lt;strong&gt;★★★★☆&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;가성비 : &lt;strong&gt;★★★★☆&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;서비스 : &lt;strong&gt;★★★★☆&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;접근성 : &lt;strong&gt;★★★★☆&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="diary" />
      

      
        <summary type="html">송파구 방이시장 인근 파스타 맛집 셰프의 부엌</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">MySQL server 설치하기 - ubuntu linux 편</title>
      <link href="https://sguys99.github.io//ds5" rel="alternate" type="text/html" title="MySQL server 설치하기 - ubuntu linux 편" />
      <published>2022-01-15T13:30:00+00:00</published>
      <updated>2022-01-15T13:30:00+00:00</updated>
      <id>https://sguys99.github.io//ds5</id>
      <content type="html" xml:base="https://sguys99.github.io//ds5">&lt;p&gt;본 포스트에서는 Ubuntu 20.04 환경에서 MySQL을 설치하는 방법에 대해 설명한다.&lt;/p&gt;

&lt;h3 id=&quot;1-패키지-업데이트&quot;&gt;1. 패키지 업데이트&lt;/h3&gt;

&lt;p&gt;기존 설치되어 있는 패키지들을 업데이트 한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.01.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-mysql-server-설치&quot;&gt;2. MySQL Server 설치&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mysql-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.02.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-secure-installation-option&quot;&gt;3. secure installation (option)&lt;/h3&gt;

&lt;p&gt;보안설정을 위한 과정이다. 필요하지 않다면 넘어가도 좋다. 보안 설정을 하고 싶다면 다음 명령을 입력하고 중간 질문에 y 또는 n으로 답변하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;root password를 설정할 것인지 질문을 한다. 여기서는 y를 선택하였다. 이후 MySQL 접속 시 사용할 패스워드를 설정한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.03.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.04.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;익명계정(anonymous)을 사용할지 묻는 질문이다. 여기서는 n을 선택하였다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.05.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;원격접속을 허용하지 않을 것인지(disallow) 묻는다. 필자의 경우 사용할 계획이므로 n을 선택하였다.(allow)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.06.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;테스트 데이터베이스를 생성할지 여부. y를 선택하였다. 필요하지 않으면 n을 선택해도 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.07.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설정을 적용하기 위해 privilege table들을 불러올지 여부. y를 선택했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.08.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-mysql-server-실행&quot;&gt;4. MySQL Server 실행&lt;/h3&gt;

&lt;p&gt;MySQL을 실행하려면 다음과 같이 명령을 입력한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ubuntu 부팅 시 MySQL을 자동으로 실행하고 싶다면 다음 명령으로 설정한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$sudo&lt;/span&gt; systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.09.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;MySQL의 구동여부 확인은 다음 명령으로 가능하다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.10.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;만약 MySQL을 재시작 하려면 다음과 같이 입력한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service mysql restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-mysql-계정-생성&quot;&gt;5. MySQL 계정 생성&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;5.1 MySQL 접속&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;다음 명령으로 MySQL에 접속한다. 앞에서 패스워드를 설정하였다면 접속 패스워드도 입력한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.11.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;사용자 정보를 확인한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;mysql&amp;gt; SELECT User, Host, authentication_string FROM mysql.user;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.12.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;로컬에서 접속가능한 root 계정만 존재한다. 원격접속을 하려면 원격접속을 허용하는 계정을 생생해야 한다.  계정의 아이디와 패스워드를 설정해주면 된다. 그 전에 패스워드 유효성 검사 기준을 조정해 주도록 한다.  요효성 검사 기준이 엄격하면 불편할 수도 있기 때문이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.2 패스워드 유효성 검사기준 변경&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;현재 패스워드 유효성 검사 기준을 확인한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;validate_password&lt;/code&gt;를 포함하는 모든 변수명을 출력하라는 명령이다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;mysql&amp;gt; show variables like &quot;validate_password%&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.13.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;유효성 검사기준을 변경한다. 여기서는 policy를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LOW&lt;/code&gt;로 패스워드에 포함할 특수문자 수를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;으로 조정하였다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;mysql&amp;gt; set global validate_password.policy=LOW
mysql&amp;gt; set global validate_password.special_char_count=0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;5.3 원격접속 계정 등록&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;원격접속 계정 생성 명령 형식은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create user ＇아이디＇@＇원격접속지 IP＇ identified by ＇패스워드';&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;만약 모든 원격접속지에서 접근 가능한 계정을 생성하려면 원격 접속지 IP 입력 자리에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;를 입력하면된다. 여기서는 remote_client라는 이름의 계정을 생성하였다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; create user 'remote_client'@'%' identified by '비밀번호';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.14.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.4 데이터베이스 접근권한 부여&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;앞에서 생성한 계정의 데이터베이스 접근권한을 부여한다. 명령 형식은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grant all privileges on DB이름.* to '아이디'@'%' with grant option;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;만약 remote_client 계정에게 모든 DB에 대한 접근 권한을 부여하고자 한다면 DB이름 자리에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;를 입력한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;mysql&amp;gt; grant all privileges on *.* to 'remote_client'@'%' with grant option;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.15.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;부여한 권한을 적용하기 위한 명령을 입력한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;mysql&amp;gt; flush privileges;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;5.5 MySQL 접속해제&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;설정을 완료했다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit&lt;/code&gt;를 입력하여 접속을 해제한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.16.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;6-원격접속-설정option&quot;&gt;6. 원격접속 설정(Option)&lt;/h3&gt;

&lt;p&gt;원격 접속을 위해서 몇가지 설정을 해야한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.1 원격접속을 위한 포트개방&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;원격으로 MySQL에 접속하고자 한다면 MySQL이 사용하는 포트를 개방해야한다. MySQL이 사용하는 Default 포트는 3306이다. 아래 명령을 입력하면 3306번이 허용된다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ufw allow mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;6.2  MySQL 설정파일 수정&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 설정파일(mysqld.cnf)을 문서 편집기로 수정해야 한다. 해당 파일을 연다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /etc/mysql/mysql.conf.d/mysqld.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설정항목중에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bind-address&lt;/code&gt; 부분을 주석처리한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-15-ds5/ds05.17.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모든 설정완료 후 MySQL을 재시작한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service mysql restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="data-science" />
      

      
        <summary type="html">본 포스트에서는 Ubuntu 20.04 환경에서 MySQL을 설치하는 방법에 대해 설명한다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">나의 이직 이야기 - 4</title>
      <link href="https://sguys99.github.io//story05" rel="alternate" type="text/html" title="나의 이직 이야기 - 4" />
      <published>2022-01-10T15:00:00+00:00</published>
      <updated>2022-01-10T15:00:00+00:00</updated>
      <id>https://sguys99.github.io//story05</id>
      <content type="html" xml:base="https://sguys99.github.io//story05">&lt;p&gt;&lt;strong&gt;- 임소장3 -&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;임소장이 입사한지 일주일이 지났다.&lt;/p&gt;

&lt;p&gt;본사 지원부서는 끝내 소장 개인 집무실을 허락하지 않았다.&lt;/p&gt;

&lt;p&gt;소장과 지원부서 담당자는 나를 중간 매개체로 며칠 째 핑퐁을 치고 있다. 서로 맞대면 해서 싫은 소리 직접하기 싫고, 그 누구도 중재하기 싫은 거다. 기분이 나쁘진 않다. 회사 생활에 익숙해지면서 감정이 무뎌질대로 무뎌졌다.&lt;/p&gt;

&lt;p&gt;지원부서 담당자는 규정상 개인 집무실은 최고 직급에게만 제공된다는 답변만 반복했다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;☞ 최고직급은 1직급. 소장은 계약직이며 2 직급.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;소장은 일주일 동안 본사를 설득하라고 고집했다.&lt;/p&gt;

&lt;p&gt;오늘에서야 회의 테이블과 칸막이를 설치하는 것으로 협의를 봤다.&lt;/p&gt;

&lt;p&gt;소장이 입사를 늦추는 바람에 사무가구 시공업체는 사무실을 알아서 공사하고 이미 떠났다.&lt;/p&gt;

&lt;p&gt;할 수 없이 나를 포함한 C팀 사람들이 지하창고에서 파티션을 짊어지고와 망치를 두들겨 가며 공사를 했다.&lt;/p&gt;

&lt;p&gt;한번쯤 스윽 내다보며 고맙다는 제스처를 취할법도 한데,&lt;/p&gt;

&lt;p&gt;소장은 작업시간 내내 자리에 앉아서 PC 모니터만 무심하게 쳐다본다.&lt;/p&gt;

&lt;p&gt;초반부터 한국식 인사치레는 전혀 없구나…. 아메리칸 스타일인가?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;일과를 마치고 시간이 되는 사람들 몇을 모아 연탄구이집에서 늦은 식사를 한다.&lt;/p&gt;

&lt;p&gt;오박사에게는 물어보지도 않았는데 저 뒤에서 우리 무리를 따라온다.&lt;/p&gt;

&lt;p&gt;연탄구이집까지 따라와서 우리 테이블에 동석한다.&lt;/p&gt;

&lt;p&gt;웃으면서 재잘거리다가, 오박사가 오니 다들 하던말을 멈춘다.&lt;/p&gt;

&lt;p&gt;눈치만 보다가 취기가 오르자 다들 한마디씩 하기 시작했다.&lt;/p&gt;

&lt;p&gt;‘소장님 좀 이상하지 않아요? 불필요한 요구사항도 이것 저것 많고 신혼여행 간다고 회사도 안나오고요.&lt;/p&gt;

&lt;p&gt;기존 상사들보다 더 권위적인 것 같아요.’&lt;/p&gt;

&lt;p&gt;오박사가 기다렸다는 듯이 말을 쏟아낸다.&lt;/p&gt;

&lt;p&gt;‘내가 보기엔 능력도 없고! 생각하는 것도 딱 어린애야 어린애!&lt;/p&gt;

&lt;p&gt;내눈에는 양복입은 어린애로 밖에 안보여!’&lt;/p&gt;

&lt;p&gt;오박사의 설교는 30분간 계속됐다.&lt;/p&gt;

&lt;p&gt;어르신이 하는 말씀이라 음식을 먹지도 못하고, 타는 고기를 곁눈으로 봐야만 했다.&lt;/p&gt;

&lt;p&gt;겉으로는 베시시 미소를 지으며, ‘허허’, ‘네네’하고 오박사 이야기에 동조하는 시늉을 했다.&lt;/p&gt;

&lt;p&gt;오박사 말을 전적으로 수긍하기는 어려웠다.&lt;/p&gt;

&lt;p&gt;그러기에는 오박사와 소장의 성격이나 행동에 공통 분모가 너무 많았다.&lt;/p&gt;

&lt;p&gt;한시간 가까이 혼자 연설하시는 오박사님.&lt;/p&gt;

&lt;p&gt;‘저, 박사님? 내일 연구소 개소식이라 일찍 일어나야 할 것 같습니다.’&lt;/p&gt;

&lt;p&gt;‘그래? 아무튼 문제가 많아. 다 먹었지? 이제 일어 나자구.’&lt;/p&gt;

&lt;p&gt;오늘 저녁식사 망했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-10-story5/story05.01.jpg&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;직원들과 삼삼오오 모여 뒷담화와 고충을 늘어놓던 연탄구이집. 가격은 좀 되지만 생근고기 세트와 된잡국밥 코스는 회포를 풀기에 충분하다.&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="diary" />
      

      
        <summary type="html">- 임소장3 -</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">나의 이직 이야기 - 3</title>
      <link href="https://sguys99.github.io//story04" rel="alternate" type="text/html" title="나의 이직 이야기 - 3" />
      <published>2022-01-07T15:50:00+00:00</published>
      <updated>2022-01-07T15:50:00+00:00</updated>
      <id>https://sguys99.github.io//story04</id>
      <content type="html" xml:base="https://sguys99.github.io//story04">&lt;p&gt;&lt;strong&gt;- 임소장2 -&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;‘여러분, 데이터 사이언스에 대해서 뭐좀 아세요? 아니 랩실에서 한거 말고….’&lt;/p&gt;

&lt;p&gt;‘내말은, 실제 적용해서 시스템 구현까지 해보셨어요?’&lt;/p&gt;

&lt;p&gt;경력직으로 입사한 오박사가 우리 5명을 회의실로 소집했다.&lt;/p&gt;

&lt;p&gt;하루에 한번 꼴로 불러내서 훈계를 한다. 소장은 아직까지도 출근하지 않았다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;오박사 : 55세. 소장(50세) 보다 나이 많음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;훈계가 또 길어진다. 지겹다. 듣는척하고 오박사의 얼굴 생김새만 살펴본다.&lt;/p&gt;

&lt;p&gt;왁스를 발라 넘긴 백발이 형광등에 비쳐 유난히 반짝인다.&lt;/p&gt;

&lt;p&gt;입사 연차로는 내가 7년 선배다.&lt;/p&gt;

&lt;p&gt;오박사가 가장 연장자여서 우리에게 이런저런 지시를 많이 내리고 회의 소집도 자주했다.&lt;/p&gt;

&lt;p&gt;‘나는 민간에서 10년 넘게 일했어요. 여기는 전문가도 없고 인프라도 없어서 걱정입니다.’&lt;/p&gt;

&lt;p&gt;그의 어투에서 자만심과 포함한 사내 공모인력에 대한 냉소적 태도가 느껴진다.&lt;/p&gt;

&lt;p&gt;아직도 출근안한 임소장에 대한 이야기도 꺼낸다.&lt;/p&gt;

&lt;p&gt;‘나는 좋은 학교 나왔다고 상사로 인정 안해요. 나보다 실력이 월등해야 소장으로 인정할거에요.’&lt;/p&gt;

&lt;p&gt;‘내가 미국 학위만 있었어도 소장감이지, 안그래 박박사?’&lt;/p&gt;

&lt;p&gt;‘우리들끼리 잘 뭉쳐야해요. 그러니 여러분이 나 힘좀 실어주세요.’&lt;/p&gt;

&lt;p&gt;아무리 자신감이 넘친다지만 머릿속에서나 굴릴 버릴 생각들을 필터링 없이 내뱉다니…&lt;/p&gt;

&lt;p&gt;‘아, 그리고!’&lt;/p&gt;

&lt;p&gt;‘소장 없다고 마냥 쉴수 없으니 팀을 나눠서 프로젝트나 하고 있자구요.’&lt;/p&gt;

&lt;p&gt;‘세팀 정도로 나누면 좋을 것 같은데…. 나와 박박사가 여기서 가장 능력이 있어 보이니 A팀장, B팀장을 맡을게요.’&lt;/p&gt;

&lt;p&gt;‘C팀장은 누가 할래요?’&lt;/p&gt;

&lt;p&gt;내가 손들었다.&lt;/p&gt;

&lt;p&gt;‘제가 할게요. 여기서 나이가 어린축에 속하긴한데 지원자가 없으면 제가 할게요.’&lt;/p&gt;

&lt;p&gt;자신있어서 손든건 아니다. 박박사랑 같은팀으로 엮이면 피곤할 것 같았다.&lt;/p&gt;

&lt;p&gt;나도 이 회사 짬만 12년이다. 누구에게 붙어야 살아남을지 본능적으로 안다.&lt;/p&gt;

&lt;p&gt;저사람은 아니다.&lt;/p&gt;

&lt;p&gt;나와 같이 차출된 사내공모 차장 두명이 나와 같은 C팀에 가겠다고 손들었다.&lt;/p&gt;

&lt;p&gt;그들도 안다. 같이 있으면 피곤해 질 것을…&lt;/p&gt;

&lt;p&gt;‘그럼 남은 차장은 나랑 한팀하면 되겠네. 자 그럼 일 합시다. 능력 키워야지!’&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;며칠 뒤 소장이 출근했다. 연구소 개소 후 2주만이다.&lt;/p&gt;

&lt;p&gt;다들 사무실 앞에 사열해서 자본주의 미소를 띄며 소장과 악수를 청한다.&lt;/p&gt;

&lt;p&gt;오박사만은 예외다.&lt;/p&gt;

&lt;p&gt;왼손은 바지 주머니에 넣고 악수랍시고 손바닥만 스치고 자리에 가서 앉는다.&lt;/p&gt;

&lt;p&gt;오박사도 그렇지만 소장의 첫인상도 예사롭지 않다. 경직되어 있는건지, 기분이 안좋은 건지…
모르겠다.&lt;/p&gt;

&lt;p&gt;직원들 인사에 대한 화답으로 약간의 미소라도 지을 법한데 시종일관 무표정이다.&lt;/p&gt;

&lt;p&gt;아니 약간 화난 얼굴에 가깝다.&lt;/p&gt;

&lt;p&gt;말수도 적고, 목소리도 작다.&lt;/p&gt;

&lt;p&gt;귀를 쫑긋하지 않으면 잘 들리지 않는다.&lt;/p&gt;

&lt;p&gt;소장은 인사를 나눈 후 자리로 가서 pc를 켰다.&lt;/p&gt;

&lt;p&gt;일을 하다가 우연히 나와 눈이 마주쳤다.&lt;/p&gt;

&lt;p&gt;나를 바라보며 뭐라고 웅얼거린다.&lt;/p&gt;

&lt;p&gt;‘네?’&lt;/p&gt;

&lt;p&gt;한마디도 안들린다. 또 웅얼웅얼…&lt;/p&gt;

&lt;p&gt;자리로 가서 다시 물었다.&lt;/p&gt;

&lt;p&gt;‘뭐 필요하신 거라도?’&lt;/p&gt;

&lt;p&gt;‘왜 내 개인 사무실 만들지 않았죠?’&lt;/p&gt;

&lt;p&gt;‘아, 네. 지원부서에서 다 같이 한 사무실에서 근무하도록 배치를 했습니다.’&lt;/p&gt;

&lt;p&gt;‘저희가 구x 코리아도 가보고 ‘카xx’ 도 가봤는데요. 요즘 IT 기업들이 다들 좌석 배치를 이렇게…..’&lt;/p&gt;

&lt;p&gt;어색한 웃음을 지으며 주절거린다.&lt;/p&gt;

&lt;p&gt;소장은 특유의 무표정으로 웅얼거리며 답했다.&lt;/p&gt;

&lt;p&gt;‘내일까지 개인 집무실 하나 만들어놔요.’&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="diary" />
      

      
        <summary type="html">- 임소장2 -</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Timeseries Analysis1 - datetime 라이브러리</title>
      <link href="https://sguys99.github.io//ds4" rel="alternate" type="text/html" title="Timeseries Analysis1 - datetime 라이브러리" />
      <published>2022-01-07T13:30:00+00:00</published>
      <updated>2022-01-07T13:30:00+00:00</updated>
      <id>https://sguys99.github.io//ds4</id>
      <content type="html" xml:base="https://sguys99.github.io//ds4">&lt;p&gt;시간정보를 다루는 python 모듈에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;datetime&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dateutil&lt;/code&gt; 등이 있다. pandas 라이브러리는 시계열 데이터를 다룰 때 내부적으로 이 모듈들을 조합해서 사용한다.&lt;/p&gt;

&lt;p&gt;본 포스트에서는 python 환경에서 pnadas로 시계열 분석을 위한 기본 라이브러리에 대해서 살펴본다.&lt;/p&gt;

&lt;h3 id=&quot;0-library-import&quot;&gt;0. Library import&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;seaborn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filterwarnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ignore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ggplot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;1-datetime-library&quot;&gt;1. datetime library&lt;/h3&gt;

&lt;p&gt;날짜정보 객체 만들기. datetime 라이브러리 안에 datetime 메서드를 사용한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1980&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같이 라이브러리를 import 하자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1980&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;datetime.datetime(1980, 5, 28, 0, 0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;데이터 타입을 확인해보자. datetime.datetime 포맷으로 표시된다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;datetime.datetime
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;현재 날짜와 시간 구하기 1&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;datetime.datetime(2022, 1, 9, 14, 33, 52, 922236)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;현재 날짜와 시간 구하기 2&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;datetime.datetime(2022, 1, 9, 14, 33, 53, 834119)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2022-01-09 14:33:53.834119
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;연-월-일 시:분:초 형태로 표현된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;strftime 메서드 :&lt;/strong&gt; 날짜정보를 문자열로 리턴한다. 메서드 인자로 문자열 포멧을 지정할 수 있다. &lt;br /&gt;
포멧에 대한 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior&quot;&gt;[이곳]&lt;/a&gt;을 참고한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%Y-%m-%d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2022-01-09
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;str
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;시간 정보를 가져올 수도 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nowTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%H:%M:%S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nowTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;18:39:05
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;날짜, 시간정보 가져오기.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;todayTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%Y-%m-%d %H:%M:%S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;todayTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2020-07-19 18:39:05
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 일의 요일 정보를 가져올 수도 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Sunday
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Sun
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;strptime 메서드 :&lt;/strong&gt; 문자열을 datetime 포맷으로 변환한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1980-05-28 14:30:00'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'%Y-%m-%d %H:%M:%S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;class 'datetime.datetime'&amp;gt;
    1980-05-28 14:30:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;날짜, 시간 정보 인덱싱하기&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    2022-01-09
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;nowTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nowTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;14:43:28.290642
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;날짜, 시간정보 합치기&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dateTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;combine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nowTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2022-01-09 14:43:28.290642
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;년(year), 월(month), 일(day) 정보를 인덱싱하기&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2022-01-09 14:43:55.073929
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    2022
    1
    9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;날짜 연산&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2022-01-09
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tomorrow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tomorrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2022-01-10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;days 대신에 사용할 수 있는 인자 값 : weeks, hours, minutes, seconds 등&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[datetime.datetime(2022, 1, 9, 0, 0), datetime.datetime(2022, 1, 10, 0, 0)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[datetime.datetime(2022, 1, 9, 0, 0), datetime.datetime(2022, 1, 29, 0, 0)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-numpy의-datetime64&quot;&gt;2. numpy의 datetime64&lt;/h3&gt;

&lt;p&gt;numpy에는 시계열 정보를 정교하게 저장하기 위한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;datetime64&lt;/code&gt;라는 것이 존재한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2022-01-09'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;array('2022-01-09', dtype='datetime64[D]')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;datetime 라이브러리와 호환도 가능하다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ns'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;numpy.datetime64('2022-01-09T15:09:57.298117000')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;날짜 연산도 가능하다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    array(['2022-01-09', '2022-01-10', '2022-01-11', '2022-01-12',
           '2022-01-13', '2022-01-14', '2022-01-15', '2022-01-16',
           '2022-01-17', '2022-01-18', '2022-01-19', '2022-01-20',
           '2022-01-21', '2022-01-22', '2022-01-23', '2022-01-24',
           '2022-01-25', '2022-01-26', '2022-01-27', '2022-01-28'],
          dtype='datetime64[D]')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-pandas-built-in-라이브러리&quot;&gt;3. pandas built-in 라이브러리&lt;/h3&gt;
&lt;p&gt;pandas에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Timestamp&lt;/code&gt;라는 객체를 내부적으로 사용한다. 이 것으로 앞에 소개한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;datetime&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dateutil&lt;/code&gt;, 그리고 numpy의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;datetime64&lt;/code&gt;를 편하게 조합할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;to_datetime :&lt;/strong&gt; 문자열을 Timestamp 포맷을 변경한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2022-01-09'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    Timestamp('2022-01-09 00:00:00')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;날짜 정보 parsing도 가능하다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;28th of May, 1980&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_birthday&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Timestamp('1980-05-28 00:00:00')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;DatetimeIndex :&lt;/strong&gt; DataFrame이나 Series의 인덱스로 사용되는 포맷을 구성한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DatetimeIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    DatetimeIndex(['2022-01-09', '2022-01-29'], dtype='datetime64[ns]', freq=None)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;특정 구간을 DatetimeIndex로 만들려면 시작, 종료지점, 그리고 빈도수를 지정하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    DatetimeIndex(['2022-01-09', '2022-01-10', '2022-01-11', '2022-01-12',
                   '2022-01-13', '2022-01-14', '2022-01-15', '2022-01-16',
                   '2022-01-17', '2022-01-18', '2022-01-19', '2022-01-20',
                   '2022-01-21', '2022-01-22', '2022-01-23', '2022-01-24',
                   '2022-01-25', '2022-01-26', '2022-01-27', '2022-01-28',
                   '2022-01-29'],
                  dtype='datetime64[ns]', freq='D')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;또 다른 방법&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    DatetimeIndex(['2022-01-09', '2022-01-10', '2022-01-11', '2022-01-12',
                   '2022-01-13', '2022-01-14', '2022-01-15', '2022-01-16',
                   '2022-01-17', '2022-01-18', '2022-01-19', '2022-01-20',
                   '2022-01-21', '2022-01-22', '2022-01-23', '2022-01-24',
                   '2022-01-25', '2022-01-26', '2022-01-27', '2022-01-28',
                   '2022-01-29'],
                  dtype='datetime64[ns]', freq=None)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;freq 관련 주요 인자는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;s: 초&lt;/li&gt;
  &lt;li&gt;T: 분&lt;/li&gt;
  &lt;li&gt;H: 시간&lt;/li&gt;
  &lt;li&gt;D: 일(day)&lt;/li&gt;
  &lt;li&gt;B: 주말이 아닌 평일&lt;/li&gt;
  &lt;li&gt;W: 주(일요일)&lt;/li&gt;
  &lt;li&gt;W-MON: 주(월요일)&lt;/li&gt;
  &lt;li&gt;M: 각 달(month)의 마지막 날&lt;/li&gt;
  &lt;li&gt;MS: 각 달의 첫날&lt;/li&gt;
  &lt;li&gt;BM: 주말이 아닌 평일 중에서 각 달의 마지막 날&lt;/li&gt;
  &lt;li&gt;BMS: 주말이 아닌 평일 중에서 각 달의 첫날&lt;/li&gt;
  &lt;li&gt;WOM-2THU: 각 달의 두번째 목요일&lt;/li&gt;
  &lt;li&gt;Q-JAN: 각 분기의 첫달의 마지막 날&lt;/li&gt;
  &lt;li&gt;Q-DEC: 각 분기의 마지막 달의 마지막 날&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;date_range&lt;/code&gt;와 유사한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;period_range&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;timedelta_range&lt;/code&gt;도 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;period_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2022-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;periods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'M'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    PeriodIndex(['2022-01', '2022-02', '2022-03', '2022-04', '2022-05', '2022-06',
                 '2022-07', '2022-08'],
                dtype='period[M]', freq='M')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;periods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    TimedeltaIndex(['0 days 00:00:00', '0 days 01:00:00', '0 days 02:00:00',
                    '0 days 03:00:00', '0 days 04:00:00', '0 days 05:00:00',
                    '0 days 06:00:00', '0 days 07:00:00', '0 days 08:00:00',
                    '0 days 09:00:00'],
                   dtype='timedelta64[ns]', freq='H')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;periods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1T30S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1T30S : 1분 30초
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    TimedeltaIndex(['0 days 00:00:00', '0 days 00:01:30', '0 days 00:03:00',
                    '0 days 00:04:30', '0 days 00:06:00', '0 days 00:07:30',
                    '0 days 00:09:00', '0 days 00:10:30', '0 days 00:12:00',
                    '0 days 00:13:30'],
                   dtype='timedelta64[ns]', freq='90S')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-시계열-데이터셋-만들기&quot;&gt;4. 시계열 데이터셋 만들기&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Series 만들기&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;series&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;series&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    2022-01-01   -0.132021
    2022-01-02    1.090681
    2022-01-03   -0.787756
    2022-01-04   -2.461332
    2022-01-05   -0.315497
    Freq: D, dtype: float64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dataframe 만들기&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;th&gt;D&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2022-01-01&lt;/th&gt;
      &lt;td&gt;0.887873&lt;/td&gt;
      &lt;td&gt;-1.127382&lt;/td&gt;
      &lt;td&gt;2.203209&lt;/td&gt;
      &lt;td&gt;-0.247588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2022-01-02&lt;/th&gt;
      &lt;td&gt;-0.653866&lt;/td&gt;
      &lt;td&gt;0.350450&lt;/td&gt;
      &lt;td&gt;0.089382&lt;/td&gt;
      &lt;td&gt;-2.678953&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2022-01-03&lt;/th&gt;
      &lt;td&gt;-0.976342&lt;/td&gt;
      &lt;td&gt;0.032952&lt;/td&gt;
      &lt;td&gt;0.675049&lt;/td&gt;
      &lt;td&gt;-0.308314&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2022-01-04&lt;/th&gt;
      &lt;td&gt;1.318794&lt;/td&gt;
      &lt;td&gt;0.667468&lt;/td&gt;
      &lt;td&gt;-0.886021&lt;/td&gt;
      &lt;td&gt;2.705370&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2022-01-05&lt;/th&gt;
      &lt;td&gt;0.302409&lt;/td&gt;
      &lt;td&gt;-0.712497&lt;/td&gt;
      &lt;td&gt;0.513426&lt;/td&gt;
      &lt;td&gt;2.089435&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Dataframe 살펴보기&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    DatetimeIndex(['2022-01-01', '2022-01-02', '2022-01-03', '2022-01-04',
                   '2022-01-05'],
                  dtype='datetime64[ns]', freq='D')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    Timestamp('2022-01-01 00:00:00', freq='D')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    Timestamp('2022-01-05 00:00:00', freq='D')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;참고자료1 : &lt;a href=&quot;https://jakevdp.github.io/PythonDataScienceHandbook/03.11-working-with-time-series.html&quot;&gt;https://jakevdp.github.io/PythonDataScienceHandbook/03.11-working-with-time-series.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;참고자료2 : &lt;a href=&quot;https://tacademy.skplanet.com/live/player/onlineLectureDetail.action?seq=152&quot;&gt;https://tacademy.skplanet.com/live/player/onlineLectureDetail.action?seq=152&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="data-science" />
      

      
        <summary type="html">시간정보를 다루는 python 모듈에는 datetime, dateutil 등이 있다. pandas 라이브러리는 시계열 데이터를 다룰 때 내부적으로 이 모듈들을 조합해서 사용한다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">오프라인 환경에 파이썬 개발환경 구축하기</title>
      <link href="https://sguys99.github.io//it05" rel="alternate" type="text/html" title="오프라인 환경에 파이썬 개발환경 구축하기" />
      <published>2022-01-05T15:00:00+00:00</published>
      <updated>2022-01-05T15:00:00+00:00</updated>
      <id>https://sguys99.github.io//it05</id>
      <content type="html" xml:base="https://sguys99.github.io//it05">&lt;p&gt;기업에서의 SW 개발환경은 보안 등의 이슈로 인해 인터넷으로부터 단절되어 있는 경우가 있다. 인터넷이 되더라도 특정 사이트가 방화벽으로 차단되어 있어 pip나 conda install이 원활하지 못할 수도 있다. 본 포스트에서는 오프라인 개발 환경에서 파이썬 개발환경을 구축하는 방법에 대해서 소개한다.&lt;/p&gt;

&lt;p&gt;윈도우OS, Minicona를 환경을 기준으로 설명한다.&lt;/p&gt;

&lt;p&gt;준비사항은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;인터넷이 연결된 PC : 설치파일 및 파이썬 패키지 다운로드용, pip 인스톨러가 설치되어있다고 가정&lt;/li&gt;
  &lt;li&gt;오프라인 PC&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;인터넷이 연결된 PC에서 설치파일과 패키지를 다운로드 받고, 이 것들을 오프라인 PC(개발환경)에 복사하여 설치를 진행하는 방식이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-05-it05/it05.00-1.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-miniconda-다운로드-및-설치&quot;&gt;1. Miniconda 다운로드 및 설치&lt;/h3&gt;
&lt;p&gt;Anaconda는 데이터분석 패키지 관리와 사용을 용이하게 하는 어플리케이션이다. 개인이나 학생 등의 연구자는 Individual Edition을 사용하면 된다. Anaconda로 150여개의 패키지들이 함께 설치되므로 편리하다.&lt;br /&gt;
2020년 하반기 유료버전(Commercial edition)에 대한 기준이 새롭게 설정되었다. 즉 200명 이상의 종업원을 보유한 기업이나 영리기관은 유료버전을 사용해야 한다.&lt;a href=&quot;https://www.anaconda.com/blog/anaconda-commercial-edition-faq&quot;&gt;[참고]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-05-it05/it05.02.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-05-it05/it05.03.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;유료버전을 사용하기 곤란한 상황이라면 대안이 있다. 바로 Miniconda를 사용하는 것이다. Minicona는 Anaconda의 minimal 버전으로 무료이다. 파이썬과 패키지 관리자 프로그램이 기본 제공된다. 다만 데이터 분석에 사용되는 패키지들은 포함되어 있지 않으므로 직접 설치해야한다. 회사에서 무료버전을 사용해야하거나 Anaconda에서 제공되는 라이브러리 전체를 사용하지 않아서 가벼운 환경을 원한다면 Miniconda가 대안이 될 수 있다.&lt;/p&gt;

&lt;p&gt;이제 설치를 위해 공식문서 url에 접속한다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.conda.io/en/latest/miniconda.html&quot;&gt;https://docs.conda.io/en/latest/miniconda.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;여기서는 윈도우 OS를 기준으로 설명한다. 사용자의 OS, 파이썬 버전에 맞는 인스톨러를 다운로드 받는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-01-05-it05/it05.03.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 파일을 오프라인 PC에 복사해서 설치한다.
&lt;img src=&quot;assets/images/2022-01-05-it05/it05.04.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;윈도우 OS의 시작버튼을 클릭해서 Anaconda Prompt가 설치되어 있으면 정상 설치된 것이다.&lt;/p&gt;

&lt;h3 id=&quot;2-파이썬-패키지-다운로드-받기&quot;&gt;2. 파이썬 패키지 다운로드 받기&lt;/h3&gt;
&lt;p&gt;이제 오프라인 pc에 설치할 패키지를 다운도르 받을 차례다.&lt;br /&gt;
인터넷이 연결된 pc에서 패키지 다운로드 명령은 다음과 같은 형태이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pip download 패키지명==버전번호&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예를 들어 numpy 1.19.5를 다운로드 받고 싶다면 다음과 같이 입력하면 된다. 버전번호를 입력하지 않으면 최신 버전이 저장된다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip download numpy==1.19.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;우선 패키지들을 저장할 폴더를 생성하고 진입하자. (여기서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pkg&lt;/code&gt;라는 이름의 폴더를 생성하였다.)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;base&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;pkg
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;base&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;pkg
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;base&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;kg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 앞에서 설명한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip download&lt;/code&gt; 명령을 사용해서 사용할 패키지들 다운로드 받는다. 패키지 사용에 필요한 dependency도 함께 저장된다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;base&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;kg&amp;gt;pip download &lt;span class=&quot;nv&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.19.5
Collecting &lt;span class=&quot;nv&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.19.5
  Using cached numpy-1.19.5-cp38-cp38-win_amd64.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13.3 MB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Saved c:&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;kg&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;umpy-1.19.5-cp38-cp38-win_amd64.whl
Successfully downloaded numpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;패키지를 다운로드 하면서 폴더안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt;파일을 생성하여 저장한 패키지명과 정보를 기록한다.
다음과 같은 형태로 기록하면 된다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;numpy==1.19.5
pandas==1.2.4
matplotlib==3.3.4
lightgbm==3.2.1
scikit-learn==0.24.1
seaborn==0.11.1
joblib==1.0.1
jupyter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;필요한 설치가 완료되면 폴더안에 requirements.txt 파일과 whl 확장자 파일이 저장되어 있을 것이다.
&lt;img src=&quot;assets/images/2022-01-05-it05/it05.05.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;참 고 : 기존 환경에 설치된 패키지리스트를 다운로드 받고 싶다면?&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip freeze&lt;/code&gt; 명령은 현재 (가상)환경에 설치된 전체 패키지를 출력한다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(base) C:\&amp;gt;pip freeze
absl-py==0.14.1
alabaster @ file:///home/ktietz/src/ci/alabaster_1611921544520/work
anaconda-client==1.7.2
anaconda-navigator==2.0.3
anaconda-project @ file:///tmp/build/80754af9/anaconda-project_1610472525955/work
anyio @ file:///C:/ci/anyio_1620153418380/work/dist
appdirs==1.4.4
argh==0.26.2

---(생 략)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;패키지 리스트를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; 파일에 출력하고 싶다면 다음과 같이 입력한다.
(파일에 기록할 때는 Anaconda prompt를 관린자 권한으로 실행해야 한다.)&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(base) C:\pkg&amp;gt;pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이파일에 기록된 패키지를 다운로드 하는 명령은 다음과 같다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(base) C:\pkg&amp;gt;pip download -r requirements.txt
Collecting numpy==1.19.5
  Downloading numpy-1.19.5-cp39-cp39-win_amd64.whl (13.3 MB)
     |████████████████████████████████| 13.3 MB 6.4 MB/s
Collecting pandas==1.2.4
  Downloading pandas-1.2.4-cp39-cp39-win_amd64.whl (9.3 MB)
     |████████████████████████████████| 9.3 MB ...
Collecting matplotlib==3.3.4
  Downloading matplotlib-3.3.4-cp39-cp39-win_amd64.whl (8.5 MB)
     |████████████████████████████████| 8.5 MB 6.4 MB/s

---(생 략)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-다운로드-받은-패키지-설치하기&quot;&gt;3. 다운로드 받은 패키지 설치하기&lt;/h3&gt;
&lt;p&gt;앞에서 다운로드 받은 패키지 폴더 전체를 오프라인 pc에 복사한다.&lt;br /&gt;
Miniconda의 Anaconda prompt를 실행한다.&lt;br /&gt;
폴더 안으로 이동하여 오프라인 패키지를 설치하는 명령을 다음과 같이 입력한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(base) C:\pkg&amp;gt; pip install --no-index --find-links=&quot;./&quot; -r requirements.txt
Looking in links: ./
Processing c:\pkg\numpy-1.19.5-cp39-cp39-win_amd64.whl
Processing c:\pkg\pandas-1.2.4-cp39-cp39-win_amd64.whl
Processing c:\pkg\matplotlib-3.3.4-cp39-cp39-win_amd64.whl
Processing c:\pkg\lightgbm-3.2.1-py3-none-win_amd64.whl
Processing c:\pkg\scikit_learn-0.24.1-cp39-cp39-win_amd64.whl

---(생 략)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 완료되었다. 설치 후에는 패키지 폴더를 삭제해도 된다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="it-tips" />
      

      
        <summary type="html">기업에서의 SW 개발환경은 보안 등의 이슈로 인해 인터넷으로부터 단절되어 있는 경우가 있다. 인터넷이 되더라도 특정 사이트가 방화벽으로 차단되어 있어 pip나 conda install이 원활하지 못할 수도 있다. 본 포스트에서는 오프라인 개발 환경에서 파이썬 개발환경을 구축하는 방법에 대해서 소개한다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">나의 이직 이야기 - 2</title>
      <link href="https://sguys99.github.io//story03" rel="alternate" type="text/html" title="나의 이직 이야기 - 2" />
      <published>2022-01-02T15:00:00+00:00</published>
      <updated>2022-01-02T15:00:00+00:00</updated>
      <id>https://sguys99.github.io//story03</id>
      <content type="html" xml:base="https://sguys99.github.io//story03">&lt;p&gt;&lt;strong&gt;- 임소장1 -&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2018년부터 나의 직함은 데이터사이언티스트가 되었다.&lt;/p&gt;

&lt;p&gt;사내 데이터사이언티스트 공모에 지원했고, 덜컥 서류-면접을 통해 합격했다.&lt;/p&gt;

&lt;p&gt;(지원 자격요건은 ‘데이터사이언스와 머신러닝에 호기심과 열정이 큰 직원’ 이었다.)&lt;/p&gt;

&lt;p&gt;정부출연연구소나 공기업의 연구소의 운영 방식은 국회나 공무원 조직의 그것과 비슷하다.&lt;/p&gt;

&lt;p&gt;조직의 장을 배치할 때 과거 이력이나 전문성 보다는, 그 사람의 지위나 영향력을 우선 고려한다.&lt;/p&gt;

&lt;p&gt;장은 1, 2년 근무 후 타 부서 또는 다른 보직으로 이동해야 한다.&lt;/p&gt;

&lt;p&gt;따라서 관리자들이 전문성을 유지하기 어렵고, 어짜피 1, 2년 후에는 이동하기 때문에 조직 운영에 대한 열정과 책임감도 약하다.&lt;/p&gt;

&lt;p&gt;조직원 구성도 마찬가지다. 외부 전문가 채용에 인색한 편이다. 주로 내부 인원 차출, 재배치로 팀을 꾸린다.&lt;/p&gt;

&lt;p&gt;유행에 따라 연구개발 테마도 자주 바뀐다. 선진국의 기술 트렌드를 쫒기 바쁘다.&lt;/p&gt;

&lt;p&gt;미국, 독일, 일본에서 관련 연구를 시작했고 가시적인 성과가 나왔는지가 중요하다.&lt;/p&gt;

&lt;p&gt;2030, 2050을 타겟으로 하는 중장기 로드맵은 있지만 매번 유행만 좆다보니 너덜너덜해졌다.&lt;/p&gt;

&lt;p&gt;잦은 정책 변화 때문에 연구원들은 매년 책상 배치를 바꾸고 사무실을 이리저리 옮기는 조직개편 행사를 경험한다.&lt;/p&gt;

&lt;p&gt;사람은 그대로다. 사무실 명패와 책상 배치만 달라질 뿐.&lt;/p&gt;

&lt;p&gt;어쨌는 ‘한국형’ AI, ‘한국형’ 빅데이터 기술을 선도한다는 미명 아래,&lt;/p&gt;

&lt;p&gt;나를 포함한 사내 공모 인력 다섯명은 빅데이터 전문가가 되었다.&lt;/p&gt;

&lt;p&gt;이번에는 다를거라고 한다. 소장될분이 외부 전문가로 특별채용했고, 우리를 제외한 나머지 실무자들도 전공자로 영입될 계획이다.&lt;/p&gt;

&lt;p&gt;우리는 1월 1일 부로 서울 데이터사이언스 연구소로 발령을 받았다.&lt;/p&gt;

&lt;p&gt;연구소 사무실에는 30개 책상만 덩그러니 놓여 있었다. 앞으로 입사할 신입사원들 자리를 포함한 것이다.&lt;/p&gt;

&lt;p&gt;책상만 제공 받았을 뿐, 관리자도 없고 행정 지원도 없다. 우리가 다 알아서 해야한다.&lt;/p&gt;

&lt;p&gt;회사의 지원은 여기까지다. 정수기부터 인터넷 연결까지 알아서 처리해야 했다.&lt;/p&gt;

&lt;p&gt;사무실에는 사외 전문가로 영입된 박사 인력 두명이 한달 전부터 근무하고 있었다.&lt;/p&gt;

&lt;p&gt;우리들과 인사를 나눴지만 서로간에 미묘한 긴장감이 흐른다.&lt;/p&gt;

&lt;p&gt;전문가 두분을 간단히 소개 하자면,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오박사(55세) : 도쿄대 경영학 박사. 나이가 많음…. 과거 경력이 빅데이터와 어떤 연관성이 있는지 알려져 있지 않음. 15개 이상의 기업에서 근무. 회사별 근속연수 평균 1.5년.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;박박사(39세) : 통계학 박사. 우리 중 유일하게 학교에서 데이터 관련 기술을 전공한 사람.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;첫날인데 조직의 리더인 연구소장이 보이지 않는다.&lt;/p&gt;

&lt;p&gt;소장은 MIT에서 AI로 박사학위를 받고 국내 글로벌 대기업 S -&amp;gt; L -&amp;gt; S를 거쳐&lt;/p&gt;

&lt;p&gt;우리회사에 스카웃된 데이터사이언스 최고 전문가라고 했다.&lt;/p&gt;

&lt;p&gt;공공기관은 외부 인재 영입에 상당히 보수적이다.&lt;/p&gt;

&lt;p&gt;위로 갈수록 보직자리가 줄어드는데 능력있는 사람이 오는 것을 반기지 않는다.&lt;/p&gt;

&lt;p&gt;외부에서 인재를 채용하고 보직까지 부여했다는 것은 상당히 파격적인 인사였다.&lt;/p&gt;

&lt;p&gt;당연히 전사 직원들의 관심이 몰렸다.&lt;/p&gt;

&lt;p&gt;소장이 없는 동안 우리끼리 알아서 사무환경을 구축하고 연구소 운영계획을 세웠다.&lt;/p&gt;

&lt;p&gt;인터넷 라인과 PC를 구매해서 사내 시스템에 연결했고, 세부조직을 어떻게 구성할지 의논했다.&lt;/p&gt;

&lt;p&gt;잘나간다는 G사, N사, 그리고 ‘카’사 연구소를 방문해서 조직이 어떻게 운영되어야 할지 벤치마킹했다.&lt;/p&gt;

&lt;p&gt;소장은 2주가 지나도 출근하지 않는다.&lt;/p&gt;

&lt;p&gt;채용을 알선한 헤드헌터를 통해 한달 뒤에 입사하겠다고 통보했다고 한다.&lt;/p&gt;

&lt;p&gt;그의 입사 날이 가까워짐에 따라 궁금증은 더 커져간다.&lt;/p&gt;

&lt;p&gt;식사 시간이나 티타임 대화의 단골 주제는 소장에 관한 이야기였다.&lt;/p&gt;

&lt;p&gt;‘MIT 박사면 우리가 일하는 모습에 답답해하지 않을까요? 초반부터 찍히면 안되는데…’&lt;/p&gt;

&lt;p&gt;‘신임소장 이름이 임xx 래요. 대단한 사람이라고 하는데 인터넷 검색하면 정보가 하나도 안나와요.’&lt;/p&gt;

&lt;p&gt;테이블 끝에 앉아있던 구차장이 한마디 꺼낸다.&lt;/p&gt;

&lt;p&gt;‘내가 본사 담당자 한테 들은게 있는데…&lt;/p&gt;

&lt;p&gt;소장, 신혼여행 가야한다고 입사 한달 연기해달라고 했대요. 안그러면 입사 안하겠다고…’&lt;/p&gt;

&lt;p&gt;평범한 성격은 아닌 것 같다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="diary" />
      

      
        <summary type="html">- 임소장1 -</summary>
      

      
      
    </entry>
  
</feed>
