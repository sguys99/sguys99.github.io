<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://sguys99.github.io//tag/it-tips/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://sguys99.github.io//" rel="alternate" type="text/html" />
  <updated>2021-12-26T08:57:43+00:00</updated>
  <id>https://sguys99.github.io//tag/it-tips/feed.xml</id>

  
  
  

  
    <title type="html">Happy Plant | </title>
  

  
    <subtitle>Data science, Machine learning, and Automatic control</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">git cheat sheet2</title>
      <link href="https://sguys99.github.io//it02" rel="alternate" type="text/html" title="git cheat sheet2" />
      <published>2021-12-23T15:00:00+00:00</published>
      <updated>2021-12-23T15:00:00+00:00</updated>
      <id>https://sguys99.github.io//it02</id>
      <content type="html" xml:base="https://sguys99.github.io//it02">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;이 포스트는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./it01&quot;&gt;cheat sheet1 - 기본 명령어&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./it01&quot;&gt;cheat sheet2 - commit 조작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;commit 조작과 관련된 명령어를 정리하였다.&lt;/p&gt;

&lt;h3 id=&quot;1-checkout&quot;&gt;1. Checkout&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout [commit hash]&lt;/code&gt; : 해당 commit으로 파일상태 변경&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout -&lt;/code&gt; : HEAD가 이전에 참조했던 commit으로 상태변경&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout master&lt;/code&gt; : HEAD가 master를 참조&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout HEAD~n&lt;/code&gt; : HEAD를 기준으로 n단계 이전 commit으로 상태변경&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-undoing-checkout&quot;&gt;2. Undoing checkout&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2021-12-23-it02/it02.01.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset&lt;/code&gt; : Staging area의 파일 전체를 unstaged 상태로 되돌리기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset [파일명]&lt;/code&gt; : 해당 파일을 unstaged 상태로 되돌리기&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2021-12-23-it02/it02.02.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit --amend&lt;/code&gt; : 최근 커밋을 수정하기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit --amend -m &quot;[commit 메시지]&quot;&lt;/code&gt; : 해당 메시지로 commit 수정하기&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2021-12-23-it02/it02.03.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset [commit hash]&lt;/code&gt; : 해당 commit으로 브랜치의 참조를 변경&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset –-hard [commit hash]&lt;/code&gt; : working directory, staging area, commit 모두 reset&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset –-mixed [commit hash]&lt;/code&gt; : working directory 유지, staging area, commit reset , default option&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset –-soft [commit hash]&lt;/code&gt; : working directory, staging area 유지, commit reset&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset HEAD^&lt;/code&gt; : HEAD를 기준으로 직전의 commit으로 reset&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset HEAD~[정수]&lt;/code&gt; : HEAD를 기준으로 정수 값 단계 전 commit으로 reset&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="it-tips" />
      

      
        <summary type="html">이 포스트는 여러 절로 구성되어 있습니다. cheat sheet1 - 기본 명령어 cheat sheet2 - commit 조작</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">git cheat sheet1</title>
      <link href="https://sguys99.github.io//it01" rel="alternate" type="text/html" title="git cheat sheet1" />
      <published>2021-12-22T15:00:00+00:00</published>
      <updated>2021-12-22T15:00:00+00:00</updated>
      <id>https://sguys99.github.io//it01</id>
      <content type="html" xml:base="https://sguys99.github.io//it01">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;이 포스트는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./it01&quot;&gt;cheat sheet1 - 기본 명령어&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./it01&quot;&gt;cheat sheet2 - commit 조작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;git 기본 명령어와 옵션 별 기능을 정리하였다.&lt;/p&gt;

&lt;h3 id=&quot;1-setup&quot;&gt;1. Setup&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git init&lt;/code&gt; : 저장소(repository) 생성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone [원격 저장소 url]&lt;/code&gt; : 해당 주소의 내용을 복제하여 저장소 생성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config user.name [작성자 이름]&lt;/code&gt; : 작성자 이름 설정&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config user.email [이메일 계정]&lt;/code&gt; : 작성자 이메일 설정&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --list&lt;/code&gt; : 저장소 설정 전체 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --get [설정항목]&lt;/code&gt; : 일부 설정항목만 출력(ex : git config –get user.name)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git help [커맨드 이름]&lt;/code&gt; : 도움말&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-stage--commit&quot;&gt;2. Stage &amp;amp; commit&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2021-12-22-it01/it01.01.jpg&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add [파일이름]&lt;/code&gt; : 수정된 파일을 staging area 올리기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add [디렉토리 명]&lt;/code&gt; : 해당 디렉토리 내에 수정된 모든 파일들을 staging area에 올리기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add .&lt;/code&gt; : working directory 내에 수정된 모든 파일들을 staging area에 올리기 (untracked 파일 제외)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit&lt;/code&gt; : 이력 저장(commit)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -m &quot;[메시지]&quot;&lt;/code&gt; : vim을 사용하지 않고 인라인으로 메시지를 추가하여 commit&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -am &quot;[메시지]&quot;&lt;/code&gt; : add와 commit을 일괄적으로 진행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-inspect&quot;&gt;3. Inspect&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;git status&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; : 저장소 파일의 상태정보 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status -s&lt;/code&gt; : 파일 상태정보를 간략하게 표시&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;git log&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log&lt;/code&gt; : 저장소의 commit이력을 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log --pretty=oneline&lt;/code&gt; : 각 commit을 한줄로 출력(–pretty 옵션 사용)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log --oneline&lt;/code&gt; : 각 commit을 한줄로 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log --decorate=full&lt;/code&gt; : 브랜치나 태그정보를 상세히 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log --graph&lt;/code&gt; : 그래프 형태로 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;git show&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git show&lt;/code&gt; : 가장 최근의 commit 정보 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git show [commit hash]&lt;/code&gt; : 해당 commit의 정보 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git show HEAD&lt;/code&gt; : HEAD가 참조하는 commit의 정보 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git show HEAD^^^&lt;/code&gt; : HEAD를 기준으로 3단계 이전의 commit정보 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git show HEAD~[n]&lt;/code&gt; : HEAD를 기준으로 n단계 이전의 commit정보 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;git diff&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git diff&lt;/code&gt; : 최근 commit과 변경사항이 발생한(Unstaged) 파일들의 내용비교&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git diff --staged&lt;/code&gt; : 최근 commit과 Staging area의 파일들 간의 변경사항 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git diff [commit hash1] [commit hash2]&lt;/code&gt; : 두 commit의 파일들 간의 변경사항 출력&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Kwang Myung Yu</name>
        
        
      </author>

      

      
        <category term="it-tips" />
      

      
        <summary type="html">이 포스트는 여러 절로 구성되어 있습니다. cheat sheet1 - 기본 명령어 cheat sheet2 - commit 조작</summary>
      

      
      
    </entry>
  
</feed>
